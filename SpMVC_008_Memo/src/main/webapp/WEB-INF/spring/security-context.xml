<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	 <context:component-scan base-package="com.callor.memo.service.auth" /> 
	
	
	<!--  
		permitAll : 누구나 접근가능하도록 설정(로그인 여부 상관 없다)
		isAnonymous : 로그인되지 않은 사용자만 사용가능
	-->
	<sec:http auto-config="true" use-expressions="true">
		<sec:intercept-url pattern="/user/login" access="isAnonymous()" />
		<sec:intercept-url pattern="/user/admin" access="isAnonymous()" />
		<sec:intercept-url pattern="/login" access="isAnonymous()" />

		<sec:intercept-url pattern="/admin/**" access="isAuthenticated() AND hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/memo/**" access="permitAll" />
		<sec:intercept-url pattern="/api/my-food-add" access="isAuthenticated()" />
		<sec:intercept-url pattern="/diary/d_add" access="isAuthenticated()" />
		<sec:intercept-url pattern="/user/mypage" access="isAuthenticated()" />


		<sec:intercept-url pattern="/403" access="permitAll" />

		<sec:access-denied-handler error-page="/403" />

		<sec:form-login login-page="/user/login?error=LOGIN_NEED"
						login-processing-url="/user/login"
						username-parameter="username"
						password-parameter="password" />
		<sec:logout logout-url="/logout"
					invalidate-session="true"
					delete-cookies="JSESSIONID"
					logout-success-url="/user/login"
					/>
					
	</sec:http>
	
	<!-- 
	로그인 절차가 시작되면 AuthenticationProvider클래스에게
	요청을 하고, 로그인을 수행해라.는 말이다.
	AuthenticationProvider는 UserDetailsService에게 사용자
	정보를 요청해 DB로부터 데이터를 SELECT 한다.
	
	정상적인 절차가 완료되면 user와 token이 담긴 객체를 return 하여 
	Security에게 알려준다. 
	 -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="ppuni" authorities="ROLE_USER" password="{noop}1234"/>
			</sec:user-service>
		</sec:authentication-provider>
		<sec:authentication-provider ref="authenticationProvider" />
	</sec:authentication-manager>	


</beans>
